server {
  host = "localhost"
  host = ${?HOST}
  port = 8080
  port = ${?PORT}

  rest {
    health-path = "health"
  }
}

kafka {
  schema-registry-url = ""
  schema-registry-url = ${?SCHEMAREGISTRY.URL}
  flight-raw-topic = "flight_raw"
  airplane-raw-topic = "airplane_raw"
  airport-raw-topic = "airport_raw"
  airline-raw-topic = "airline_raw"
  city-raw-topic = "city_raw"
  parser-error-topic = "parser_error"
  invalid-flight-topic = "flight_invalid"
  enable-interceptors = true
}

application-id = "kafka-dvs-aviation-edge-producer"

aviation {
  host = ""
  host = ${?AVIATION_EDGE.BASE_URL}
  key = ""
  key = ${?AVIATION_EDGE.KEY}
  api-timeout = 20
  api-timeout = ${?AVIATION_EDGE.TIMEOUT}
  flight-speed-limit = 1200
  flight-speed-limit = ${?AVIATION_EDGE.FLIGHT_SPEED_LIMIT}

  tick-source {
    poll-lower-hour-limit = 4
    poll-lower-hour-limit = ${?AVIATION_EDGE.POLL_LOWER_HOUR_LIMIT_UTC}
    poll-upper-hour-limit = 16
    poll-upper-hour-limit = ${?AVIATION_EDGE.POLL_UPPER_HOUR_LIMIT_UTC}
    poll-excluded-days = [SUNDAY,SATURDAY]
    poll-excluded-days = ${?AVIATION_EDGE.POLL_EXCLUDED_DAYS}
  }

  flight-stream {
    path = "/v2/public/flights"
    polling-start = 90
    polling-interval = 30
  }
  airplane-stream {
    path = "/v2/public/airplaneDatabase"
    polling-start = 30
    polling-interval = 432000
  }
  airport-stream {
    path = "/v2/public/airportDatabase"
    polling-start = 60
    polling-interval = 432000
  }
  airline-stream {
    path = "/v2/public/airlineDatabase"
    polling-start = 10
    polling-interval = 432000
  }
  city-stream {
    path = "/v2/public/cityDatabase"
    polling-start = 20
    polling-interval = 432000
  }
}

akka {
  kafka.producer {
    close-timeout = 5s
    kafka-clients {
      client.id = ${application-id}
      bootstrap.servers = ${?KAFKA.BOOTSTRAP.SERVERS}
      schema.registry.url = ${?SCHEMAREGISTRY.URL}
      batch.size = 0
    }
  }
  http.parsing {
    max-to-strict-bytes= 50m
    max-content-length = 50m
  }
}
